write.csv(eo2ho_coordinates_NE,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/no_coordinates.csv', row.names = FALSE)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/no_coordinates.csv', row.names = FALSE)
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/no_coordinates.csv', row.names = FALSE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))

#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#Check if the required packages are installed, if not install them
list_of_packages <- c("dplyr", "stringr")
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
#Load required packages
lapply(list_of_packages, library, character.only = TRUE)
#load onspd data
onspd <- read.csv('data/onspd_short.csv')
#Load the Eat Out To Help Out (EO2HO) data
#eo2ho <- read.csv('data/participating-establishments/restaurants.csv')
#Load directly from github
eo2ho <- read.csv('https://raw.githubusercontent.com/hmrc/eat-out-to-help-out-establishments/master/data/participating-establishments/restaurants.csv')
#Format the postcodes to match the onspd data
eo2ho$Postcode<- toupper(str_replace_all(eo2ho$Postcode, " ", ""))
eo2ho$Postcode<-paste(substr(eo2ho$Postcode, 1,nchar(eo2ho$Postcode)-3), substr(eo2ho$Postcode,nchar(eo2ho$Postcode)-2,nchar(eo2ho$Postcode)), sep = " ", collapse = NULL)
#Join EO2HO data to onspd to get a cordinate for each establishment
eo2ho_coordinates <- merge(eo2ho, onspd, by="Postcode", all = TRUE)
# Keep only restaurants
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$Name))
#Subset any that didn't match to the onspd for investigation
no_coordinates<- subset(eo2ho_coordinates, is.na(eo2ho_coordinates$lat))
#Remove those that we couldn't get coordinates for, from the final dataset
eo2ho_coordinates <- subset(eo2ho_coordinates, !is.na(eo2ho_coordinates$lat))
#Add address column for popu
eo2ho_coordinates$Address <- paste(eo2ho_coordinates$Name, eo2ho_coordinates$Line.1, eo2ho_coordinates$Line.2, eo2ho_coordinates$Town, eo2ho_coordinates$County, eo2ho_coordinates$Postcode, sep=", ")
#A smaller subset that can be used for testing the leaflet map
eo2ho_coordinates_NE<- eo2ho_coordinates %>% filter(str_detect(Postcode,"^NE"))
#Drop uneeded columns
eo2ho_coordinates <- subset(eo2ho_coordinates, select = c(lat, lng, Address))
eo2ho_coordinates_NE <- subset(eo2ho_coordinates_NE, select = c(lat, lng, Address))
#remove the original datasets to free up memory
rm(onspd, eo2ho)
#Write the data to a new csv
write.csv(eo2ho_coordinates,'data/eo2ho_coordinates.csv', row.names = FALSE)
write.csv(eo2ho_coordinates_NE,'data/eo2ho_coordinates_NE.csv', row.names = FALSE)
write.csv(no_coordinates,'data/no_coordinates.csv', row.names = FALSE)
